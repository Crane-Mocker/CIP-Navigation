##################################################################################
# Copyright (c) 2010, 2011, 2012, 2013, Daniel Urieli, Peter Stone
# University of Texas at Austin
# All right reserved
# 
# Based On:
# 
# Copyright (c) 2000-2003, Jelle Kok, University of Amsterdam
# All rights reserved.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
# 
# 1. Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
# 
# 2. Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
# 
# 3. Neither the name of the University of Amsterdam nor the names of its
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
# 
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
# DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
# SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
# CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
##################################################################################

###############################################################
# POINTS FOR THE PARALLEL EDGES CONFIGURATION (AAAI 11 PAPER) #
###############################################################
task = 'TASK_PATROL_WITH_ONLINE_ASSIGNMENT'
# override sea model files as needed
waterFile = 'waterCurrents_parallel_edge_example.py'


# The following data was generated by a static patrol
# over all the edges, by running the simulator using
# the task file:
# input_files/task_area_coverage_patrol_points_and_distances.py
# Possible improvement: gather it online
patrolPoints=[(500, 500), (750, 500), (1000, 500), (1250, 500), (1500, 500), (1750, 500), (2000, 500), (2250, 500), (2250, 1000), (2000, 1000), (1750, 1000), (1500, 1000), (1250, 1000), (1000, 1000), (750, 1000), (500, 1000)]
edgeLengths={((1250, 500), (1000, 500)): [102, 112, 113, 104, 113, 113, 113, 113, 113, 104, 113, 113, 113, 113, 113, 104, 113, 113, 113, 113, 113, 104, 113, 113], ((1250, 1000), (1500, 1000)): [231, 229, 229, 229, 229], ((2250, 1000), (2250, 500)): [120, 123, 118, 122, 122, 122, 122, 122, 118, 122, 122, 122, 122, 122, 118, 122, 122, 122, 122, 118, 122, 122, 122, 122], ((1500, 1000), (1250, 1000)): [149, 149, 149, 149], ((1750, 1000), (1500, 1000)): [103, 109, 110, 103, 110, 111, 110, 110, 103, 111, 110, 110, 111, 110, 103, 110, 111, 110, 110, 103, 111, 110, 110, 111], ((2250, 500), (2000, 500)): [105, 113, 106, 113, 113, 113, 113, 113, 106, 113, 113, 113, 113, 113, 106, 113, 113, 113, 113, 106, 113, 113, 113, 113], ((1750, 1000), (2000, 1000)): [229, 229, 229, 229], ((500, 500), (500, 1000)): [152, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149, 149], ((1750, 500), (2000, 500)): [229, 149, 149, 149, 149], ((1000, 1000), (1250, 1000)): [91, 89, 116, 113, 113, 113, 113, 89, 113, 113, 113, 113, 113, 89, 113, 113, 113, 113, 89, 113, 113, 113, 113, 113, 89, 113], ((750, 500), (1000, 500)): [182, 141, 141, 141, 141], ((1000, 500), (1000, 1000)): [117, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122], ((1250, 1000), (1000, 1000)): [102, 100, 101, 103, 100, 100, 101, 103, 100, 100, 101, 100, 103, 100, 101, 100, 100, 103, 101, 100, 100], ((750, 500), (750, 1000)): [115, 115, 118, 116, 118, 116, 118, 116, 118, 116, 118, 116, 118, 116, 118, 116, 118, 116, 118, 116, 118], ((1000, 500), (1250, 500)): [94, 94, 100, 100, 100, 100, 94, 100, 100, 100, 94, 100, 100, 100, 100, 94, 100, 100, 100, 100, 94, 100], ((2250, 1000), (2000, 1000)): [102, 100, 105, 100, 100, 100, 101, 100, 100, 100, 100, 101, 100, 100, 100, 100, 101, 100, 100, 100, 101], ((1500, 1000), (1500, 500)): [124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124], ((500, 1000), (500, 500)): [147, 147, 147, 147, 162, 147, 147, 147, 147, 147, 162, 147, 147, 147, 147, 162, 147, 147, 147, 147, 147, 162, 147, 147], ((750, 1000), (1000, 1000)): [218, 227, 227, 227, 227], ((750, 1000), (500, 1000)): [111, 111, 112, 111, 101, 112, 111, 112, 111, 112, 101, 111, 112, 111, 112, 101, 111, 112, 111, 112, 111, 101, 112, 111, 112], ((2000, 1000), (2250, 1000)): [88, 115, 89, 113, 113, 113, 113, 113, 89, 113, 113, 113, 113, 113, 89, 113, 113, 113, 113, 89, 113, 113, 113, 113], ((1250, 500), (1250, 1000)): [192, 187, 187, 186, 187, 187, 186, 187, 187, 186, 187, 187, 186, 187, 187, 186, 187], ((1750, 500), (1500, 500)): [106, 104, 91, 104, 104, 104, 104, 91, 104, 104, 104, 104, 91, 104, 104, 104, 104, 91, 104, 104], ((1750, 500), (1750, 1000)): [116, 125, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124, 124], ((750, 500), (500, 500)): [98, 109, 109, 90, 109, 109, 109, 109, 90, 109, 109, 109, 109, 90, 109, 109, 109, 109, 90, 109, 109], ((1250, 1000), (1250, 500)): [126, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122], ((1500, 1000), (1750, 1000)): [91, 90, 103, 104, 104, 104, 90, 104, 104, 104, 104, 90, 104, 104, 104, 104, 90, 104, 104, 104, 104], ((1000, 1000), (1000, 500)): [186, 186, 187, 186, 186, 187, 186, 186, 187, 186, 186, 187, 186, 186, 187, 186], ((2000, 500), (1750, 500)): [160, 158, 158, 158], ((2000, 1000), (2000, 500)): [186, 187, 187, 186, 187, 187, 186, 187, 187, 186, 187, 187, 186, 187, 187, 186], ((1500, 500), (1750, 500)): [107, 90, 112, 110, 111, 110, 110, 104, 111, 110, 110, 111, 104, 110, 110, 111, 110, 110, 104, 111, 110, 110, 111, 104, 110, 110], ((2000, 500), (2000, 1000)): [120, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122, 122], ((2250, 500), (2250, 1000)): [190, 186, 204, 186, 187, 186, 191, 186, 187, 186, 186, 191, 187, 186, 186, 191, 187, 186, 186, 187, 191, 186], ((1500, 500), (1250, 500)): [154, 152, 152, 152], ((1500, 500), (1500, 1000)): [190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190], ((2000, 1000), (1750, 1000)): [147, 148, 148, 148], ((1750, 1000), (1750, 500)): [197, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190, 190], ((500, 1000), (750, 1000)): [90, 90, 99, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98, 98, 98, 98, 99, 98], ((1000, 1000), (750, 1000)): [198, 198, 198, 198], ((1000, 500), (750, 500)): [232, 232, 232, 232], ((2000, 500), (2250, 500)): [89, 100, 89, 100, 101, 100, 103, 100, 101, 100, 100, 103, 101, 100, 100, 103, 101, 100, 100, 101, 103, 100], ((1250, 500), (1500, 500)): [226, 149, 149, 149, 149], ((750, 1000), (750, 500)): [266, 212, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213, 213], ((500, 500), (750, 500)): [92, 92, 95, 94, 94, 94, 96, 94, 94, 94, 94, 94, 96, 94, 94, 94, 94, 96, 94, 94, 94, 94, 94, 96, 94, 94]}

# Define participating ships' positions.
# Here, generating ships initial state using python coding.
numShips = 4 
shipInitialStates = [state.ShipExternalState(100,100,0,0,0) for i in range(numShips)]
# define roles for ships - must have the same length as shipInitialStates
roles = [ 'originalPatroller' for i in range(numShips)]


# we use rules of the sea when patrolling
rulesOfTheSea = True

# This means recording point visit frequency while patrolling
resultsType = 'visit_times'
